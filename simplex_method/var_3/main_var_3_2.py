import numpy as np
from scipy.optimize import linprog

# Пример задачи линейного программирования
# Максимизировать: z = 3x1 + 2x2
# При ограничениях:
# x1 + x2 <= 4
# x1 - x2 <= 2
# x1, x2 >= 0

# Коэффициенты целевой функции (для максимизации, используем отрицательные значения)
c = np.array([
    -7.6 * 0.1,
    -7.5 * 0.05,
    -6.5 * 0.3,
    -5.5 * 0.3,
    -7 * 0.1,
    -6 * 0.1,
    -6 * 0.05
])

# Матрица ограничений
A = np.array([
    [
        0.1, 0.05, 0.3, 0.3, 0.1, 0.1, 0.05  # 7
    ],  # 1-ое ограничение

    # 2-ое ограничение
    [
        0.1, 0, 0, 0, 0, 0, 0
    ],
    [
        0, 0.05, 0, 0, 0, 0, 0
    ],
    [
        0, 0, 0.3, 0, 0, 0, 0
    ],
    [
        0, 0, 0, 0.3, 0, 0, 0
    ],
    [
        0, 0, 0, 0, 0.1, 0, 0
    ],
    [
        0, 0, 0, 0, 0, 0.1, 0
    ],
    [
        0, 0, 0, 0, 0, 0, 0.05
    ]
])

# Вектор правых частей ограничений
b = np.array([
    1,

    0.1,
    0.3,
    0.3,
    0.3,
    0.1,
    0.1,
    0.05

])

# Решение задачи линейного программирования
result = linprog(c, A_ub=A, b_ub=b, method='simplex')

# Вывод результатов
if result.success:
    print("Оптимальное решение:", result.x)
    print("Оптимальное значение целевой функции:", -result.fun)
else:
    print("Решение не найдено.")